{
  "contractName": "TokenTimelock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20Basic",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_releaseTime",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_releaseTime\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"TokenTimelock is a token holder contract that will allow a beneficiary to extract the tokens after a given release time\",\"methods\":{},\"title\":\"TokenTimelock\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/anas/Desktop/ESILV_A5/Ethereum-td2/contracts/TokenTimeLock.sol\":\"TokenTimelock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/anas/Desktop/ESILV_A5/Ethereum-td2/contracts/ERC20Basic.sol\":{\"keccak256\":\"0xa73e0b16b163f337c568e27fc74470a9852eba8c95f85714175f2d9daed4c361\",\"urls\":[\"bzz-raw://72fffeb0d0d165fc2c99c8acd5319d409d7fd52b34eca2b6f877263d7c7dc4fb\",\"dweb:/ipfs/QmPygWxqqyBnYDM94c9PqDusfQsxWQ951qEjmdT5XRbZt3\"]},\"/Users/anas/Desktop/ESILV_A5/Ethereum-td2/contracts/TokenTimeLock.sol\":{\"keccak256\":\"0x128ce8acac5c6dfcad50f360a2f93fa9c218a9ce4744524a6ffd7db024aaa080\",\"urls\":[\"bzz-raw://7ec01bee895e14c25c749063ac36bfef88a5592559d57ebdc53222129a2af16e\",\"dweb:/ipfs/QmZuUJzmf4V7dkCjoS6pTz3BidbB3K6PqErSHiyHbeVwBK\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161024e38038061024e8339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050428167ffffffffffffffff161161006e57600080fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050506101248061012a6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806338af3eed146037578063b91d400114607f575b600080fd5b603d60af565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b608560d5565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900467ffffffffffffffff168156fea265627a7a72315820aea1a4ce1c021c86fb6d4b1c867e78568fb879ded1b22bd741439e3690a70c4b64736f6c634300050c0032",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c806338af3eed146037578063b91d400114607f575b600080fd5b603d60af565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b608560d5565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900467ffffffffffffffff168156fea265627a7a72315820aea1a4ce1c021c86fb6d4b1c867e78568fb879ded1b22bd741439e3690a70c4b64736f6c634300050c0032",
  "sourceMap": "224:540:12:-;;;539:221;8:9:-1;5:2;;;30:1;27;20:12;5:2;539:221:12;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;539:221:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:3;638:12;:18;;;630:27;;;;;;675:6;667:5;;:14;;;;;;;;;;;;;;;;;;705:12;691:11;;:26;;;;;;;;;;;;;;;;;;741:12;727:11;;:26;;;;;;;;;;;;;;;;;;539:221;;;224:540;;;;;;",
  "deployedSourceMap": "224:540:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;224:540:12;;;;;;;;;;;;;;;;;;;;;;;;427:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;507:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;427:26;;;;;;;;;;;;;:::o;507:25::-;;;;;;;;;;;;;:::o",
  "source": "\npragma solidity >=0.4.21 <0.6.0;\nimport \"./ERC20Basic.sol\";\n/**\n * @title TokenTimelock\n * @dev TokenTimelock is a token holder contract that will allow a\n * beneficiary to extract the tokens after a given release time\n */\ncontract TokenTimelock { //is Ownable\n    // using SafeERC20 for ERC20Basic;\n\n    // ERC20 basic token contract being held\n    ERC20Basic token;\n\n    // beneficiary of tokens after they are released\n    address public beneficiary;\n\n    // timestamp when token release is enabled\n    uint64 public releaseTime;\n\n    constructor(ERC20Basic _token, address _beneficiary, uint64 _releaseTime) public {\n        require(_releaseTime > now);\n        token = _token;\n        beneficiary = _beneficiary;\n        releaseTime = _releaseTime;\n    }\n\n\n}",
  "sourcePath": "/Users/anas/Desktop/ESILV_A5/Ethereum-td2/contracts/TokenTimeLock.sol",
  "ast": {
    "absolutePath": "/Users/anas/Desktop/ESILV_A5/Ethereum-td2/contracts/TokenTimeLock.sol",
    "exportedSymbols": {
      "TokenTimelock": [
        1023
      ]
    },
    "id": 1024,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 987,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:32:12"
      },
      {
        "absolutePath": "/Users/anas/Desktop/ESILV_A5/Ethereum-td2/contracts/ERC20Basic.sol",
        "file": "./ERC20Basic.sol",
        "id": 988,
        "nodeType": "ImportDirective",
        "scope": 1024,
        "sourceUnit": 401,
        "src": "34:26:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title TokenTimelock\n@dev TokenTimelock is a token holder contract that will allow a\nbeneficiary to extract the tokens after a given release time",
        "fullyImplemented": true,
        "id": 1023,
        "linearizedBaseContracts": [
          1023
        ],
        "name": "TokenTimelock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 990,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 1023,
            "src": "351:16:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Basic_$400",
              "typeString": "contract ERC20Basic"
            },
            "typeName": {
              "contractScope": null,
              "id": 989,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 400,
              "src": "351:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$400",
                "typeString": "contract ERC20Basic"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 992,
            "name": "beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 1023,
            "src": "427:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 991,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "427:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 994,
            "name": "releaseTime",
            "nodeType": "VariableDeclaration",
            "scope": 1023,
            "src": "507:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 993,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "507:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1021,
              "nodeType": "Block",
              "src": "620:140:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1004,
                          "name": "_releaseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "638:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1005,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1338,
                          "src": "653:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "638:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1339,
                        1340
                      ],
                      "referencedDeclaration": 1339,
                      "src": "630:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "630:27:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1009,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "667:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Basic_$400",
                        "typeString": "contract ERC20Basic"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1010,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "675:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Basic_$400",
                        "typeString": "contract ERC20Basic"
                      }
                    },
                    "src": "667:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$400",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "id": 1012,
                  "nodeType": "ExpressionStatement",
                  "src": "667:14:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1013,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 992,
                      "src": "691:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1014,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "705:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "691:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "691:26:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1017,
                      "name": "releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 994,
                      "src": "727:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1018,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "741:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "727:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "727:26:12"
                }
              ]
            },
            "documentation": null,
            "id": 1022,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "551:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$400",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 995,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 400,
                    "src": "551:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$400",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 998,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "570:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "_releaseTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "592:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "550:62:12"
            },
            "returnParameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "620:0:12"
            },
            "scope": 1023,
            "src": "539:221:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1024,
        "src": "224:540:12"
      }
    ],
    "src": "1:763:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/anas/Desktop/ESILV_A5/Ethereum-td2/contracts/TokenTimeLock.sol",
    "exportedSymbols": {
      "TokenTimelock": [
        1023
      ]
    },
    "id": 1024,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 987,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:32:12"
      },
      {
        "absolutePath": "/Users/anas/Desktop/ESILV_A5/Ethereum-td2/contracts/ERC20Basic.sol",
        "file": "./ERC20Basic.sol",
        "id": 988,
        "nodeType": "ImportDirective",
        "scope": 1024,
        "sourceUnit": 401,
        "src": "34:26:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title TokenTimelock\n@dev TokenTimelock is a token holder contract that will allow a\nbeneficiary to extract the tokens after a given release time",
        "fullyImplemented": true,
        "id": 1023,
        "linearizedBaseContracts": [
          1023
        ],
        "name": "TokenTimelock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 990,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 1023,
            "src": "351:16:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Basic_$400",
              "typeString": "contract ERC20Basic"
            },
            "typeName": {
              "contractScope": null,
              "id": 989,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 400,
              "src": "351:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$400",
                "typeString": "contract ERC20Basic"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 992,
            "name": "beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 1023,
            "src": "427:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 991,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "427:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 994,
            "name": "releaseTime",
            "nodeType": "VariableDeclaration",
            "scope": 1023,
            "src": "507:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 993,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "507:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1021,
              "nodeType": "Block",
              "src": "620:140:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1004,
                          "name": "_releaseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "638:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1005,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1338,
                          "src": "653:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "638:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1339,
                        1340
                      ],
                      "referencedDeclaration": 1339,
                      "src": "630:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "630:27:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1009,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "667:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Basic_$400",
                        "typeString": "contract ERC20Basic"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1010,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "675:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Basic_$400",
                        "typeString": "contract ERC20Basic"
                      }
                    },
                    "src": "667:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$400",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "id": 1012,
                  "nodeType": "ExpressionStatement",
                  "src": "667:14:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1013,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 992,
                      "src": "691:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1014,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "705:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "691:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "691:26:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1017,
                      "name": "releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 994,
                      "src": "727:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1018,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "741:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "727:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "727:26:12"
                }
              ]
            },
            "documentation": null,
            "id": 1022,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "551:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$400",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 995,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 400,
                    "src": "551:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$400",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 998,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "570:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "_releaseTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "592:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "550:62:12"
            },
            "returnParameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "620:0:12"
            },
            "scope": 1023,
            "src": "539:221:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1024,
        "src": "224:540:12"
      }
    ],
    "src": "1:763:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-23T23:35:02.958Z",
  "devdoc": {
    "details": "TokenTimelock is a token holder contract that will allow a beneficiary to extract the tokens after a given release time",
    "methods": {},
    "title": "TokenTimelock"
  },
  "userdoc": {
    "methods": {}
  }
}